version: 2.1

orbs:
#   # docker-buildx: foodles/docker-buildx@0.0.1
#   terraform: devops-workflow/terraform@0.0.1
  bt: circleci/build-tools@2.6.3
  orb-tools: circleci/orb-tools@8.8.0
  docker: circleci/docker@0.5.13

jobs:
  build:
    docker:
      - image: docker:19.03
      # - image: jonoh/docker-buildx-qemu

    working_directory: ~/repo
    environment:
      DOCKER_HOST: tcp://docker:2375/
    
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      
      # - terraform/terraform_fmt
      # - run:
      #     name: Remove old installation
      #     command: |
      #       sudo systemctl stop docker.service
      #       sudo apt remove docker-ce docker-ce-cli containerd.io

      # - docker/install-docker:
      #     install-dir: /usr/bin

      # - run:
      #     name: Restart docker daemon
      #     command: |
      #       if [[ $EUID == 0 ]]; then export SUDO=""; else export SUDO="sudo"; fi
      #       $SUDO systemctl unmask docker.service
      #       $SUDO systemctl unmask docker.socket
      #       $SUDO systemctl start docker.service

      # - run:
      #     name: Install buildx
      #     command: |
      #       BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64"

      #       curl --output docker-buildx \
      #         --silent --show-error --location --fail --retry 3 \
      #         "$BUILDX_BINARY_URL"

      #       mkdir -p ~/.docker/cli-plugins

      #       mv docker-buildx ~/.docker/cli-plugins/
      #       chmod a+x ~/.docker/cli-plugins/docker-buildx

      #       docker buildx install
      #       # Run binfmt
      #       docker run --rm --privileged docker/binfmt:66f9012c56a8316f9244ffd7622d7c21c1f6f28d

      # https://hub.docker.com/r/jonoh/docker-buildx-qemu
      # - run: |
      #     # docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      #     # login to DockerHub
      #     echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          
      #     # Use docker-container driver to allow useful features (push/multi-platform)

      #     BUILDER_NAME="multibuilder"
      #     CONTEXT_NAME="buildx"

      #     docker context create $CONTEXT_NAME
      #     docker buildx create $CONTEXT_NAME --name $BUILDER_NAME
      #     docker buildx inspect $BUILDER_NAME --bootstrap
      #     docker buildx use $BUILDER_NAME

      #     # docker buildx create --driver docker-container --use
      #     # docker buildx inspect --bootstrap
      
      #     update-binfmts --enable # Important: Ensures execution of other binary formats is enabled in the kernel

      #     TAG=$CIRCLE_BUILD_NUM
      #     IMAGE_NAME="yahmlevi/python"
      #     DOCKERFILE="./docker/dockerfiles/python.dockerfile"

      #     docker buildx build --platform linux/arm/v7,local --pull -t $IMAGE_NAME:$TAG --push -f $DOCKERFILE .
      
      - run: 
          name: Test Docker
          command: |
            docker run hello-world
      
      # - docker-buildx/publish:
      #     dockerfile: ./docker/dockerfiles/opencv.dockerfile
      #     image: yahmlevi/opencv:$CIRCLE_BUILD_NUM

      # - run:
      #     name: Build 'Python' Docker Image and Push to DockerHub
      #     command: |
      #       TAG=$CIRCLE_BUILD_NUM
      #       IMAGE_NAME="yahmlevi/python"
      #       DOCKERFILE="./docker/dockerfiles/python.dockerfile"

      #       # build docker image
      #       docker build --tag $IMAGE_NAME:$TAG -f $DOCKERFILE .

      #       # tag with "latest"
      #       docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest

      #       # login to DockerHub
      #       echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

      #       # push to DockerHub (both with build number and latest)
      #       docker push $IMAGE_NAME:$TAG
      #       docker push $IMAGE_NAME:latest

      # - run:
      #     name: Build 'OpenCV' Docker Image and Push to DockerHub
      #     command: |
      #       TAG=$CIRCLE_BUILD_NUM
      #       IMAGE_NAME="yahmlevi/opencv"
      #       DOCKERFILE="./docker/dockerfiles/opencv.dockerfile"

      #       # build docker image
      #       docker build -t $IMAGE_NAME:$TAG -f $DOCKERFILE .

      #       # tag with "latest"
      #       docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest

      #       # login to DockerHub
      #       echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

      #       # push to DockerHub (both with build number and latest)
      #       docker push $IMAGE_NAME:$TAG
      #       docker push $IMAGE_NAME:latest

      - run:
          name: Build 'node-red' Docker Image
          command: |
            IMAGE_NAME="yahmlevi/robo-car"
            TAG=$CIRCLE_BUILD_NUM
            DOCKERFILE="./docker/dockerfiles/node-red.dockerfile"

            FILE=docker-build.sh
            cp ./ci/scripts/$FILE $FILE 

            ls -l
            
            chmod +x $FILE 
            ls -l
            
            ./$FILE $IMAGE_NAME $TAG $DOCKERFILE
